relativeURLs = true
title = "The Chapel Programming Language"

theme = "hugo-universal-theme"
themesDir = "themes"
languageCode = "en-us"
# Site language. Available translations in the theme's `/i18n` directory.
defaultContentLanguage = "en"

# Enable Google Analytics by entering your tracking code
googleAnalytics = ""

# number of words of summarized post content (default 70)
summaryLength = 70

# Define the number of posts per page
paginatation.paperSize = 10

# not pluralize title pages by default
pluralizelisttitles = false

# disable authors, categories, tags pages
disableKinds = ['taxonomy', 'term']

[menu]


# Main menu
[[menu.main]]
    name       = "Download"
    identifier = "menu.download"
    url        = "/download"
    weight     = 1

[[menu.main]]
    name       = "Docs"
    identifier = "menu.docs"
    url        = "https://chapel-lang.org/docs"
    weight     = 3

[[menu.main]]
    name       = "Quickstart Instructions"
    url        = "https://chapel-lang.org/docs/usingchapel/QUICKSTART.html"
    weight     = 1
    parent     = "menu.docs"

[[menu.main]]
    name       = "Language Spec"
    url        = "https://chapel-lang.org/docs/language/spec/"
    weight     = 2
    parent     = "menu.docs"

[[menu.main]]
    name       = "Primers"
    url        = "https://chapel-lang.org/docs/primers/"
    weight     = 3
    parent     = "menu.docs"

[[menu.main]]
    name       = "Modules"
    url        = "https://chapel-lang.org/docs/modules/standard.html"
    weight     = 4
    parent     = "menu.docs"

[[menu.main]]
    name       = "Developer/Contributor Docs"
    url        = "https://chapel-lang.org/docs/developer/"
    weight     = 5
    parent     = "menu.docs"

[[menu.main]]
    name       = "Technical Notes"
    url        = "https://chapel-lang.org/docs/technotes/"
    weight     = 6
    parent     = "menu.docs"



[[menu.main]]
    name       = "Learn"
    identifier = "menu.learn"
    url        = "/learn"
    weight     = 4

[[menu.main]]
    name       = "Resources"
    identifier = "menu.resources"
    url        = "/resources"
    weight     = 5

[[menu.main]]
    name       = "Tutorials"
    url        = "/tutorials"
    weight     = 1
    parent     = "menu.resources"

[[menu.main]]
    name       = "Papers"
    url        = "/papers"
    weight     = 2
    parent     = "menu.resources"

[[menu.main]]
    name       = "Presentations"
    url        = "/presentations"
    weight     = 3
    parent     = "menu.resources"

[[menu.main]]
    name       = "Examples"
    url        = "/examples"
    weight     = 4
    parent     = "menu.resources"


[[menu.main]]
    name       = "Community"
    identifier = "section.community"
    url        = "/community"
    weight     = 6

[[menu.main]]
    name       = "Blog"
    identifier = "section.blog"
    url        = "/blog"
    weight     = 8





# Top bar social links menu


[params]
    version="2.4"
    versionURL="blog/posts/announcing-chapel-2.4/"
    mainSections = ["blog"]

    # Style options: default (light-blue), blue, green, marsala, pink, red, turquoise, violet
    style = "default"

    # Since this template is static, the contact form uses www.formspree.io as a
    # proxy. The form makes a POST request to their servers to send the actual
    # email. Visitors can send up to a 50 emails each month for free.
    #
    # What you need to do for the setup?
    #
    # - register your account to https://formspree.io/register
    # - login and create new form
    # - set your form's endpoint url under 'formspree_action' below
    # - upload the generated site to your server
    # - test a dummy email yourself
    # - you're done. Happy mailing!
    #
    # Enable the contact form by entering your Formspree.io endpoint url
    formspree_action = "https://formspree.io/sample/of/endpoint"
    contact_form_ajax = false

    # Formspree form supports Google reCAPTCHA Key (type v2).
    # If you use this feature, you should enable reCAPTCHA feature in the Formspree dashboard.
    #
    # By default, Formspree use a redirect page for recaptcha widget.
    # If you use a recaptcha widget in your contact page, you should do next steps.
    # (if you don't want, skip these steps)
    #
    #   1. register your site on Google recaptcha admin page: https://www.google.com/recaptcha/admin
    #   2. select reCAPTCHA v2 and checkbox widget type.
    #   3. remember site key and secret key.
    #   4. enter secret key into "Custom reCAPTCHA Key" field in your Formspree form setting page.
    #   5. change `enableRecaptchaInContactForm` is to true
    #   6. enter site key into `googleRecaptchaKey` to enable a recaptcha widget in your page.
    #
    enableRecaptchaInContactForm = false
    googleRecaptchaKey = "site_key_for_google_recaptcha"

    copyright = ""

    # Format dates with Go's time formatting
    date_format = "January 2, 2006"

    dropdown_mouse_over = true

    disabled_logo = false
    logo_text = "Chapel"

    logo = "img/chapel-logo.svg"
    name_logo = "img/ChapelName.png"
    logo_small = "img/chapel-logo.svg"
    tagline="Productive parallel computing at every scale."
[permalinks]
    blog = "/blog/:year/:month/:day/:filename/"

# Enable or disable top bar with social icons
[params.topbar]
    enable = true

# Enable and disable widgets for the right sidebar
[params.widgets]
    categories = true
    tags = true
    search = true

[params.carouselCustomers]
    items = 6
    auto_play = false
    slide_speed = 2000
    pagination_speed = 1000

[params.carouselApplications]
    items = 4
    auto_play = false
    slide_speed = 2000
    pagination_speed = 1000

[params.carouselHomepage]
    # All carousel items are defined in their own files. You can find example items
    # at 'exampleSite/data/carousel'.
    # For more information take a look at the README.
    enable = false
    auto_play = false
    slide_speed = 2000
    pagination_speed = 1000

[params.topgrid]
    enable = true
    cols = 3 # Default: 3, Available values 2,3,4,6

[params.attributes]
    enable = true
    cols = 3 # Default: 3, Available values 2,3,4,6



[params.applications]
    enable = true
    # All testimonials are defined in their own files. You can find example items
    # at 'exampleSite/data/testimonials'.
    # For more information take a look at the README.
    title = "Chapel in Production"
    subtitle = "Check out some of the projects that are using Chapel to accelerate their workflows."


[params.clients]
    enable = true
    # All clients are defined in their own files. You can find example items
    # at 'exampleSite/data/clients'.
    # For more information take a look at the README.
    title = "Our Clients"
    subtitle = ""

[params.recent_posts]
    enable = true
    title = "What's New?"
    subtitle = ""
    hide_summary = false


[taxonomies]
  category = "categories"
  tag = "tags"
  author = "authors"


[markup.goldmark.parser.attribute]
    block = true


[[params.quotes]]
    name="Éric Laurendeau"
    title="Professor, Polytechnique Montréal"
    quote="The use of Chapel worked as intended: the code maintenance is very much reduced, and its readability is astonishing. This enables undergraduate students to contribute to its development, something almost impossible to think of when using very complex software."

[[params.quotes]]
    name="Tess Hayes"
    title="Developer, Bytoa"
    quote="A lot of the nitty gritty is hidden from you until you need to know it. ... It feels like the complexity grows as you get more comfortable -- rather than being hit with everything at once."

[[params.codes]]
  name="Hello World"
  default="true"
  code = """
writeln("Hello, world!");

// create a parallel task per processor core
coforall tid in 0..<here.maxTaskPar do
  writeln("Hello from task ", tid);

// print these 1,000 messages in parallel using all cores
forall i in 1..1000 do
  writeln("Hello from iteration ", i);
"""

[[params.codes]]
  name="Distributed Hello World"
  code= """
// print a message per compute node
coforall loc in Locales do
  on loc do
    writeln("Hello from locale ", loc.id);

// print a message per core per compute node
coforall loc in Locales do
  on loc do
    coforall tid in 0..<here.maxTaskPar do
      writeln("Hello from task ", tid, " on locale ", loc.id);

// print 1,000 messages in parallel using all nodes and cores
use BlockDist;
const Inds = blockDist.createDomain(1..1000);
forall i in Inds do
  writeln("Hello from iteration ", i, " running on locale ", here.id);
"""


[[params.codes]]
  name="Parallel File IO"
  code="""
use IO;

// read in a file containing 'city name;temperature' lines (1BRC-style)
const stats = [line in stdin.lines()] new cityTemperature(line);
writeln(stats);

record cityTemperature {
  const city: string;  // city name
  const temp: real;    // temperature

  proc init(str: string) {
    const words = str.split(";");
    this.city = words[0];
    this.temp = words[1]: real;
  }
}
"""

[[params.codes]]
  name="1D Heat Diffusion"
  code="""
// set different values at runtime with command line arguments
// e.g. --n=2048 --numSteps=256 --alpha=0.8
config const n = 1000,
             numSteps = 100,
             alpha = 1.0;

const fullDomain = {1..n},
      interior   = {2..n-1};

var u: [fullDomain] real = 1.0; 
u[n/4..3*n/4] = 2.0;  // make the middle a bit hotter

var un = u;

for 1..numSteps {
  forall i in interior do  // shared-memory parallelism
    u[i] = un[i] + alpha * (un[i-1] - 2*un[i] + un[i+1]);  
  un <=> u;  // swap the two arrays
}

writeln(un);
"""

[[params.codes]]
  name="GPU Kernel"
  code="""
use Random, Math;

const nGpus = here.gpus.size,
      n     = Locales.size*nGpus;

var A: [1..n, 1..n] real;

fillRandom(A);

// use all nodes
coforall (loc, localRowStart) in zip(Locales, 1.. by nGpus) do on loc { 
  // and all GPUs within each
  coforall (gpu, row) in zip(here.gpus, localRowStart..) do on gpu {    
    var B: [1..n] real = A[row, ..];    // copy a row from device to host
    B = asin(B);                        // compute (kernel launch)
    A[row, ..] = B;                     // copy the row back
  }
}

writeln(A);
"""




[[params.socials]]
    weight = 1
    name = "BlueSky"
    url = "https://bsky.app/profile/chapellanguage.bsky.social"
    image = "img/socials/bluesky.png"

[[params.socials]]
    weight = 9
    name = "X (Twitter)"
    url = "https://x.com/ChapelLanguage"
    image = "img/socials/twitter.png"

[[params.socials]]
    weight = 10
    name = "YouTube"
    url="https://www.youtube.com/@ChapelLanguage"
    image = "img/socials/youtube.png"

[[params.socials]]
    weight = 5
    name = "LinkedIn"
    url = "https://www.linkedin.com/company/chapellanguage"
    image = "img/socials/linkedin.png"

[[params.socials]]
    weight = 7
    name = "Mastodon"
    url = "https://mastodon.social/@chapelprogramminglanguage"
    image = "img/socials/mastodon.png"

[[params.socials]]
    weight = 4
    name = "Facebook"
    url = "https://www.facebook.com/ChapelLanguage"
    image = "img/socials/facebook.png"

[[params.socials]]
    weight = 8
    name = "Reddit"
    url = "https://www.reddit.com/r/chapel/"
    image = "img/socials/reddit.png"

[[params.forums]]
    weight = 1
    name = "Discord"
    url = "https://discord.gg/xu2xg45yqH"
    image = "img/socials/discord.png"

[[params.forums]]
    weight=8
    name="Stack Overflow"
    url = "https://stackoverflow.com/questions/tagged/chapel"
    image=  "img/socials/stackOverflow.png"

[[params.forums]]
    weight = 2
    name = "Discourse"
    url = "https://chapel.discourse.group/"
    image = "img/socials/discourse.png"

[[params.forums]]
    weight = 5
    name = "GitHub Issues"
    url = "https://github.com/chapel-lang/chapel/issues/new/choose"
    image = "img/socials/github.png"

[[params.forums]]
    weight = 6
    name = "Gitter"
    url = "https://gitter.im/chapel-lang/chapel"
    image = "img/socials/gitter.png"

[[params.forums]]
    weight = 3
    name = "Email"
    url = "mailto:chapel+qs@discoursemail.com"
    image = "img/socials/mail.png"

[[params.devel]]
    weight = 1
    name = "Attempt This Online"
    url = "https://ato.pxeger.com/run?1=m70sOSOxIDVnwYKlpSVpuhY7y4syS1Jz8jSUPFJzcvJ1FMrzi3JSFJU0rSHyUGUw5QA"
    image = "img/socials/ato.png"

[[params.devel]]
    weight = 2
    name = "Docker"
    url = "https://hub.docker.com/r/chapel/chapel"
    image = "img/socials/docker.png"

[[params.devel]]
    weight = 3
    name = "E4S"
    url = "https://e4s-project.github.io/DocPortal.html"
    image = "img/socials/e4s.png"

[[params.devel]]
    weight = 4
    name = "GitHub Releases"
    url = "https://github.com/chapel-lang/chapel/releases"
    image = "img/socials/github.png"

[[params.devel]]
    weight = 5
    name = "Homebrew"
    url = "https://formulae.brew.sh/formula/chapel"
    image = "img/socials/homebrew.png"

[[params.devel]]
    weight = 10
    name = "Spack"
    url = "https://packages.spack.io/package.html?name=chapel"
    image = "img/socials/spack.png"


