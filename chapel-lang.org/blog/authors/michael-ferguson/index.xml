<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Michael Ferguson on Chapel Language Blog</title>
    <link>https://chapel-lang.org/blog/authors/michael-ferguson/</link>
    <description>Recent content in Michael Ferguson on Chapel Language Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="/authors/michael-ferguson/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Announcing Chapel 2.3!</title>
      <link>https://chapel-lang.org/blog/posts/announcing-chapel-2.3/</link>
      <pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://chapel-lang.org/blog/posts/announcing-chapel-2.3/</guid>
      <description>Highlights from the December 2024 release of Chapel 2.3</description>
    </item>
    <item>
      <title>Memory Safety in Chapel</title>
      <link>https://chapel-lang.org/blog/posts/memory-safety/</link>
      <pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://chapel-lang.org/blog/posts/memory-safety/</guid>
      <description>A description of how Chapel&amp;rsquo;s features for memory safety strike a balance between productivity and performance, with comparisons to other languages</description>
    </item>
    <item>
      <title>Comparing Standard Library Sorts: The Impact of Parallelism</title>
      <link>https://chapel-lang.org/blog/posts/std-sort-performance/</link>
      <pubDate>Tue, 30 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://chapel-lang.org/blog/posts/std-sort-performance/</guid>
      <description>This blog post compares the performance of standard library sort routines in several programming languages.</description>
    </item>
  </channel>
</rss>
