CamelOrPascalCaseVariables
~~~~~~~~~~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for variables that are not 'camelCase' or 'PascalCase'.

CamelCaseRecords
~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for records that are not 'camelCase'.

CamelCaseFunctions
~~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for functions that are not 'camelCase'.

PascalCaseClasses
~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for classes that are not 'PascalCase'.

PascalCaseModules
~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for modules that are not 'PascalCase'.

UseExplicitModules
~~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for code that relies on auto-inserted implicit modules.

DoKeywordAndBlock
~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for redundant 'do' keyword before a curly brace '{'.

Using both the 'do' keyword and curly braces is redundant.

.. code-block:: chapel

    for i in 1..10 do {
      writeln(i);
    }


ControlFlowParentheses
~~~~~~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for unnecessary parentheses in conditional statements and loops.

Conditional statements in Chapel do not require parentheses around the
condition. The following demonstrate this, the two if statements are
equivalent.

.. code-block:: chapel

    config const value = 5;
    if (value > 0) then
      writeln("Value is positive");
    if value > 0 then
      writeln("Value is positive");


NestedCoforalls
~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for nested 'coforall' loops, which could lead to performance hits.

BoolLitInCondStmt
~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for boolean literals like 'true' in a conditional statement.

ChplPrefixReserved
~~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for user-defined names that start with the 'chpl\_' reserved prefix.

MethodsAfterFields
~~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for classes or records that mix field and method definitions.

EmptyStmts
~~~~~~~~~~

Is enabled by default? Yes

Warn for empty statements (i.e., unnecessary semicolons).

UnusedTupleUnpack
~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for unused tuple unpacking, such as '(_, _)'.

ComplexLiteralOrder
~~~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for complex literals that are not in a consistent order.

ConsecutiveDecls
~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for consecutive variable declarations that can be combined.

MisleadingIndentation
~~~~~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for single-statement blocks that look like they might be multi-statement blocks.

UnusedFormal
~~~~~~~~~~~~

Is enabled by default? Yes

Warn for unused formals in functions.

UnusedTaskIntent
~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for unused task intents in functions.

UnusedTypeQuery
~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for unused type queries in functions.

UnusedLoopIndex
~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for unused index variables in loops.

SimpleDomainAsRange
~~~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for simple domains in loops that can be ranges.

IncorrectIndentation
~~~~~~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for inconsistent or missing indentation

MissingInIntent
~~~~~~~~~~~~~~~

Is enabled by default? Yes

Warn for formals used to initialize fields that are missing an 'in' intent.

LineLength
~~~~~~~~~~

Is enabled by default? Yes

Warn for lines that exceed a maximum length.
By default, the maximum line length is 80 characters.

Settings:
  - ``.Max``
