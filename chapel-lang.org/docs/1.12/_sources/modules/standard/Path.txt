.. default-domain:: chpl

.. module:: Path
   :synopsis: A file utilities library, specifically related to path operations

Module: Path
============
A file utilities library, specifically related to path operations

The Path module focuses on manipulation of the path to a file or directory.
Also provided are constant values representing common idioms that may vary
across operating systems (though rarely in the modern era), such as general
references to a parent directory or the current directory.

.. note::

   This module is currently under development and will expand significantly
   in upcoming releases.  Stay tuned!

Operations which occur on the files or directories referred to by these paths
may be found in :mod:`FileSystem` (for operations *on* the file) or :mod:`IO`
(for operations *within* the file).

.. data:: const curDir = "."

   Represents generally the current directory 

.. data:: const parentDir = ".."

   Represents generally the parent directory 

.. data:: const pathSep = "/"

   Denotes the separator between a directory and its child. 

.. function:: proc realPath(name: string): string

   Given a path `name`, attempts to determine the canonical path referenced.
   This resolves and removes any :data:`curDir` and :data:`parentDir` uses
   present, as well as any symbolic links.  Returns the result
   
   Will halt with an error message if one is detected.
   
   :arg name: A path to resolve.  If the path does not refer to a valid file
              or directory, an error will occur.
   :type name: string
   
   :return: A canonical version of the argument.
   :rtype: string

.. method:: proc file.realPath(): string

   Determines the canonical path referenced by the :type:`~IO.file` record
   performing this operation.  This resolves and removes any :data:`curDir` and
   :data:`parentDir` uses present, as well as any symbolic links.  Returns the
   result
   
   Will halt with an error message if one is detected.
   
   :return: A canonical path to the file referenced by this :type:`~IO.file`
            record.  If the :type:`~IO.file` record is not valid, an error will
            occur
   :rtype: string

